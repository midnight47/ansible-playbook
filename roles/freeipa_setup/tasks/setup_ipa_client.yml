---
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  become: true

- name: Add hosts to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item]['ansible_host'] }} {{ item }}"
    state: present
  loop: "{{ groups['freeipa'] }}"

- name: Configure /etc/resolv.conf
  blockinfile:
    path: /etc/resolv.conf
    block: |
      search {{ domain }}
      nameserver {{ hostvars[groups['ipa_servers'][0]]['ansible_host'] }}
      {% for replica in groups['ipa_replicas'] %}
      nameserver {{ hostvars[replica]['ansible_host'] }}
      {% endfor %}
  become: true

- name: Copy FreeIPA repository template RedHat
  template:
    src: freeipa.repo.j2
    dest: /etc/yum.repos.d/freeipa.repo
  become: true
  when: ansible_os_family == "RedHat"

- name: Install IPA replica packages RedHat
  yum:
    name:
      - expect
      - freeipa-client
    state: present
  become: yes
  when: ansible_os_family == "RedHat"

- name: Install IPA client and dependencies on Debian/Ubuntu
  apt:
    name:
      - expect
      - freeipa-client
    state: present
  become: yes
  when: ansible_os_family == "Debian"

- name: Check if FreeIPA client is already installed
  stat:
    path: /etc/ipa/default.conf
  register: ipa_client_install_check

- name: Install IPA client
  shell: |
    expect -c '
    spawn ipa-client-install --mkhomedir --domain={{ domain }} --realm={{ realm }} --server={{ groups["ipa_servers"][0] }} --principal=admin --password={{ admin_password }} --unattended
    expect "Proceed with fixed values and no DNS discovery? \[no\]:"
    send "yes\r"
    expect "Continue to configure the system with these values? \[no\]:"
    send "yes\r"
    expect "User authorized to enroll computers:"
    send "admin\r"
    expect "Password for admin@{{ realm }}:"
    send "{{ admin_password }}\r"
    expect eof
    '
  become: yes
  when:
    - not ipa_client_install_check.stat.exists
