- name: Install essential packages
  yum:
    name:
      - sshpass
      - sudo
      - telnet
      - htop
      - bind-utils
      - net-tools
      - vim
      - nano
      - tcpdump
      - ntp
      - ntpdate
      - libselinux-python
      - wget
      - rsync
      - curl
      - jq
    state: latest
  when: ansible_distribution in ['RedHat', 'CentOS']

- name: Install essential packages for CentOS and Rocky
  yum:
    name:
      - sshpass
      - sudo
      - telnet
      - htop
      - bind-utils
      - net-tools
      - vim
      - nano
      - tcpdump
      - chrony  # Заменяет ntp и ntpdate
      - python3-libselinux  # Заменяет libselinux-python
      - wget
      - rsync
      - curl
      - jq
    state: latest
  when: ansible_distribution in ['Rocky']

- name: Delete firewalld service
  yum:
    name: 
      - firewalld
    state: absent
  when: 
    - ansible_distribution in ['RedHat', 'CentOS', 'Rocky']

- name: Install additional packages
  yum:
    name:
      - iptables
      - iptables-services
    state: latest
  register: iptables_install_result
  when: 
    - ansible_distribution in ['RedHat', 'CentOS', 'Rocky']

- name: Install default packages debian
  apt:
    name:
      - thin-provisioning-tools
      - sshpass
      - sudo
      - telnet
      - htop
      - dnsutils
      - net-tools
      - vim
      - nano
      - tcpdump
      - ntp
      - ntpdate
      - python3-selinux
      - wget
      - rsync
      - software-properties-common
      - curl
      - python3-apt 
      - python-apt-doc 
      - python-apt-common
      - jq
    state: present
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Install additional packages in Debian 11
  apt:
    name:
      - iptables
      - iptables-persistent
    state: present
  register: iptables_install_result
  when: ansible_distribution in ['Debian', 'Ubuntu']

- name: Delete ufw service
  apt:
    name: ufw
    state: absent
  when: ansible_distribution in ['Debian', 'Ubuntu']


- name: Enable and start iptables service
  ansible.builtin.systemd:
    name: iptables
    enabled: true
    state: started
  when: iptables_install_result.changed

- name: Flush all iptables rules
  ansible.builtin.command: iptables -F
  when: iptables_install_result.changed

- name: Save iptables rules
  ansible.builtin.command: service iptables save
  when: iptables_install_result.changed
