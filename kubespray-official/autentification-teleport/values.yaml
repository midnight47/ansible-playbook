clusterName: teleport.test.local
proxyListenerMode: multiplex

proxyProtocol: "off"

log:
  level: DEBUG

teleport:
  dataDir: /var/lib/teleport

  authService:
    enabled: true
    storage:
      type: dir

  proxyService:
    enabled: true
    publicAddr: teleport.test.local:443
    web_listen_addr: 0.0.0.0:443

    # монтируем CA, чтобы Teleport доверял своему же TLS-сертификату
    extraVolumes:
      - name: teleport-ca
        secret:
          secretName: teleport-ca-cert
    extraVolumeMounts:
      - name: teleport-ca
        mountPath: /etc/ssl/certs
        readOnly: true
    env:
      - name: SSL_CERT_FILE
        value: /etc/ssl/certs/ca.pem

  kubeService:
    enabled: true
    kubeClusterName: "cluster.local"

  sshService:
    enabled: false

service:
  type: ClusterIP

persistence:
  enabled: true
  accessModes:
    - ReadWriteMany
  size: 2Gi
  storageClassName: nfs-client

ingress:
  enabled: true
  spec:
    ingressClassName: nginx
    rules:
      - host: teleport.test.local
        http:
          paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: teleport-cluster
                  port:
                    number: 443

# Глобальные аннотации (chart автоматически подхватит annotations.ingress для metadata.ingress.annotations)
annotations:
  ingress:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"

# Секрет с TLS-сертификатом для Teleport proxy (chart смонтирует его в /etc/teleport/certs)
tls:
  existingSecretName: teleport-tls
  existingCASecretName: teleport-ca-cert

auth:
  tls:
    enabled: true
    certFile: /etc/teleport/certs/tls.crt
    keyFile: /etc/teleport/certs/tls.key
    caFile: /etc/teleport/certs/ca.crt
  extraVolumes:
    - name: teleport-tls
      secret:
        secretName: teleport-tls
  extraVolumeMounts:
    - name: teleport-tls
      mountPath: /etc/teleport/certs
      readOnly: true
