controller:
  enabled: true
  kind: Deployment # DaemonSet
  replicaCount: 2

  # CPU/memory limits for the controller pods
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 256Mi

  # CRD for the nginx ingress class
  ingressClassResource:
    default: false
    enabled: true
    name: nginx
    controllerValue: k8s.io/ingress-nginx

  # Enable metrics endpoint
  metrics:
    enabled: true
    port: 10254
    service:
      enabled: true
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"
  extraArgs:
    "enable-ssl-passthrough": "true"

#  enable-ssl-passthrough: true
#  passthrough:
#    enabled: true

  # All valid ConfigMap keys must be in kebab-case
  config:
    disable-ipv6: "true"
    disable-ipv6-dns: "true"
    enable-access-log-for-default-backend: "false"
    http2-max-field-size: "8k"
    large-client-header-buffers: "16 64k"
    limit-conn-status-code: "429"
    limit-req-status-code: "429"
    load-balance: ewma
    keepalive: "65"
    client-max-body-size: "300m"
    proxy-body-size: "300m"
    error-log-level: error
    log-format-escape-json: "true"
    log-format-upstream: >-
      {"bytes_sent":"$bytes_sent","vhost":"$host","
      request_proto":"$server_protocol","remote_addr":"$remote_addr",
      "proxy_add_x_forwarded_for":"$proxy_add_x_forwarded_for","remote_user":"$remote_user",
      "time_local":"$time_local","request_method":"$request_method",
      "request_uri":"$uri","request_args":"$args","request":"$request",
      "status":"$status","body_bytes_sent":"$body_bytes_sent",
      "http_referer":"$http_referer","http_user_agent":"$http_user_agent",
      "request_length":"$request_length","request_time":"$request_time",
      "upstream_addr":"$upstream_addr","upstream_response_length":"$upstream_response_length",
      "upstream_response_time":"$upstream_response_time","upstream_status":"$upstream_status",
      "X-Business-Error":"$upstream_http_x_business_error","upstream_header_time":"$upstream_header_time",
      "upstream_connect_time":"$upstream_connect_time","connections_waiting":"$connections_waiting",
      "connections_active":"$connections_active"}
    map-hash-bucket-size: "128"
    server-tokens: "false"
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-session-cache: "true"
    ssl-session-cache-size: "20m"
    ssl-session-timeout: "30m"
    use-forwarded-headers: "true"
    use-gzip: "true"
    use-proxy-protocol: "false"
    worker-cpu-affinity: auto
    worker-processes: "2"
    allow-snippet-annotations: "true"
    annotations-risk-level: Critical

  ingressClass: nginx

  # Service definition for the controller
  service:
    type: LoadBalancer
    externalTrafficPolicy: Cluster

  # Turn on the admission webhook deployment
  admissionWebhooks:
    enabled: true

  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"


defaultBackend:
  enabled: false

tcp:
  2222: "gitlab/gitlab-gitlab-shell:2222"

