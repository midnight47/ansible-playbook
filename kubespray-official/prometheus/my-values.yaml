namespaceOverride: "monitoring"

alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations: {}
      #kubernetes.io/ingress.class: nginx
    hosts:
      - alertmanager.test.ru
    paths:
      - /
  
  alertmanagerSpec:
    storage: 
     volumeClaimTemplate:
       spec:
         storageClassName: nfs-client
         accessModes: ["ReadWriteOnce"]
         resources:
           requests:
             storage: 1Gi
         selector: {}

    storage: 
     volumeClaimTemplate:
       spec:
         storageClassName: nfs-client
         accessModes: ["ReadWriteMany"]
         resources:
           requests:
             storage: 1Gi


grafana:
  enabled: true
  namespaceOverride: "monitoring"
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: utc
  adminPassword: prom-operator
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts: 
      - grafana.test.ru
    path: /

  persistence:
    type: pvc
    enabled: true
    storageClassName: nfs-client
    accessModes:
      - ReadWriteMany
    size: 1Gi
    # annotations: {}
    finalizers:
      - kubernetes.io/pvc-protection

kube-state-metrics:
  namespaceOverride: "monitoring"
  rbac:
    create: true
  #podSecurityPolicy:
   #enabled: true

prometheus-node-exporter:
  namespaceOverride: ""
  podLabels:
    jobLabel: node-exporter
  releaseLabel: true
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$


kubeControllerManager:
  enabled: true
  service:
    port: 10252
    targetPort: 10252
    selector:
      k8s-app: kube-controller-manager

kubeScheduler:
  enabled: true
  service:
    port: 10251
    targetPort: 10251
    selector:
      k8s-app: kube-scheduler

kubeProxy:
  enabled: true
  service:
    port: 10249
    targetPort: 10249


prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.test.ru
    paths:
     - /

  prometheusSpec:
    serviceMonitorNamespaceSelector:
       matchLabels:
         prometheus: enabled

    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: nfs-client
          accessModes: ["ReadWriteMany"]
          resources:
            requests:
              storage: 10Gi

