namespaceOverride: "monitoring"

alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations: {}
    hosts:
      - alertmanager.test.local
    paths:
      - /
  alertmanagerSpec:
    storage: 
     volumeClaimTemplate:
       spec:
         storageClassName: nfs-client
         accessModes: ["ReadWriteOnce"]
         resources:
           requests:
             storage: 1Gi
         selector: {}
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi

grafana:
  enabled: true
  namespaceOverride: "monitoring"
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: utc
  adminPassword: prom-operator
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts: 
      - grafana.test.local
    path: /

  persistence:
    type: pvc
    enabled: true
    storageClassName: nfs-client
    accessModes:
      - ReadWriteMany
    size: 2Gi
    finalizers:
      - kubernetes.io/pvc-protection
  resources:
    limits:
      cpu: 500m
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 100Mi

prometheus:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - prometheus.test.local
    paths:
     - /

  prometheusSpec:
    scrapeInterval: 15s
    evaluationInterval: 15s
    retention: 10d
    serviceMonitorNamespaceSelector:
       matchLabels:
         prometheus: enabled

    storageSpec: 
      volumeClaimTemplate:
        spec:
          storageClassName: nfs-client
          accessModes: ["ReadWriteMany"]
          resources:
            requests:
              storage: 10Gi
    resources:
      limits:
        cpu: 1500m
        memory: 2000Mi
      requests:
        cpu: 1000m
        memory: 1000Mi

prometheusOperator:
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 250m
      memory: 250Mi

prometheus-node-exporter:
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi

kube-state-metrics:
  resources:
    limits:
      cpu: 100m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 50Mi

metricsServer:
  resources:
    limits:
      cpu: 100m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 200Mi
